- hosts: all
  #user: ansibleuser
  become: true

  vars:
    pkgs:
      - sssd
      - sssd-tools
      - realmd
      - oddjob
      - oddjob-mkhomedir
      - adcli
      - samba-common
      - samba-common-tools
      - krb5-workstation
      - openldap-clients

    ad_domain: MATHODEMOS.COM
    ad_domain_alt: mathodemos.com
    join_ou: OU=Servers,DC=mathodemos,DC=com
    srv_adm_grp_ou: OU=Groups,DC=mathodemos,DC=com
    resolv_nameservers:
      - 10.0.1.174

    set_dns: true
    join_to_ad: true


  tasks:


  - name: Checking if running RedHat Family
    fail:
      msg: The system is not running RedHat/CentOS, aborting
    when: ansible_facts['os_family'] != 'RedHat'



    - name: Set correct DNS servers in resolv.conf

      block:

        - name: make sure line 'dns=none' is set in /etc/NetworkManager/NetworkManager.conf
          ini_file:
            path: /etc/NetworkManager/NetworkManager.conf
            state: present
            no_extra_spaces: yes
            section: main
            option: dns
            value: none
            owner: root
            group: root
            mode: 0644
            backup: yes
          notify:
            - Reload_NetworkManager

            
        - name: deploy resolv.conf template
          template:
            src: resolv.conf.j2
            dest: /etc/resolv.conf
            owner: root
            group: root
            mode: 0644
            backup: yes
          notify:
            - Reload_NetworkManager  
          
      when: set_dns



    - name: Ensure any handlers are run before moving on
      meta: flush_handlers


    - name: Tasks to join to AD

      block:

        - name: Checking if packages required to join AD realm are present
          yum: name={{ pkgs }} state=present update_cache=yes
          

        - name: Settings up hostname
          shell: hostnamectl set-hostname {{ inventory_hostname }}.{{ ad_domain_alt }}


        - name: Joinining the AD realm (creating AD computer account and updating /etc/krb5.keytab)
          shell: echo '{{ admin_pass }}' | adcli join --stdin-password {{ ad_domain }} -U {{ admin_user }} --domain-ou={{ join_ou }}

        - name: Creating AD server admin group
          shell: echo '{{ admin_pass }}' | adcli create-group ADM_{{ inventory_hostname }} --stdin-password --domain={{ ad_domain }} --description="Admin group for {{ inventory_hostname }} server" --domain-ou={{ srv_adm_grp_ou }} -U {{ admin_user }}
          ignore_errors: true

        - name: Configuring sssd.conf
          template:
            src: sssd.j2
            dest: /etc/sssd/sssd.conf
            owner: root
            group: root
            mode: 0600

        - name: Configuring krb5.conf
          template:
            src: krb5.j2
            dest: /etc/krb5.conf
            owner: root
            group: root
            mode: 0644

        - name: Configuring sudoers
          template:
            src: ADsudoers.j2
            dest: /etc/sudoers.d/ADsudoers
            owner: root
            group: root
            mode: 0440

        - name: Configuring PAM/SSHD to use SSSD
          shell: authselect select sssd with-mkhomedir --force

        - name: Enabling oddjobd service
          systemd:
            name: oddjobd.service
            enabled: yes
            state: started

        - name: Restarting SSSD
          systemd:
            name: sssd
            enabled: yes
            state: restarted

      when: join_to_ad

  handlers:
    - name: Reload_NetworkManager 
      service:
        name: NetworkManager
        state: reloaded



  #  for AD users to logon, may need to implement this to workaround PAM problem....
  #  https://access.redhat.com/solutions/4090871