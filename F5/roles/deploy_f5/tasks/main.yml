---
############## f5 node ##############
- name: find ami for F5 BIG-IP
  ec2_ami_info:
    region: "{{ ec2_region }}"
    owners: "{{ ec2_info.f5node.owners }}"
    filters:
      name: "{{ ec2_info.f5node.filter }}"
      architecture: "{{ ec2_info.f5node.architecture }}"
  register: amis

- name: save ami for F5
  set_fact:
    f5_ami: >
      {{ amis.images | selectattr('name', 'defined') | sort(attribute='creation_date') | last }}

- name: ensure project folder {{ ec2_name_prefix }} exists
  file:
    path: "{{ playbook_dir }}/{{ ec2_name_prefix }}"
    state: directory

- name: Create ssh key pair for workshop {{ ec2_name_prefix }}
  amazon.aws.ec2_key:
    name: "{{ ec2_name_prefix }}-key"
    region: "{{ ec2_region }}"
  register: create_key

- name: save private key
  copy:
    content: "{{ create_key.key.private_key }}"
    dest: "{{ playbook_dir }}/{{ ec2_name_prefix }}/{{ ec2_name_prefix }}-private.pem"
    mode: '0400'
  when: create_key.changed

- name: Ensure key file has proper permissions
  file:
    dest: "{{ playbook_dir }}/{{ ec2_name_prefix }}/{{ ec2_name_prefix }}-private.pem" 
    mode: 0600
  when: create_key.changed

- name: s3 bucket for persistent storage of ec2 key exists
  amazon.aws.s3_bucket:
    name: "{{ ec2_name_prefix|lower }}.private"
    state: present
    region: "{{ ec2_region }}"
    tags:
      ansible-workshops: "true"
  retries: 4
  delay: 15
  register: s3_result
  until: s3_result.failed == false

- name: Store SSH Key Pair
  amazon.aws.aws_s3:
    bucket: "{{ ec2_name_prefix|lower }}.private"
    mode: put
    object: "{{ec2_name_prefix}}-private.pem"
    src: "{{ playbook_dir }}/{{ ec2_name_prefix }}/{{ ec2_name_prefix }}-private.pem"
    encrypt: true
    region: "{{ ec2_region }}"
  when: create_key.changed

- name: Save Private key from S3 Bucket when not generating it
  amazon.aws.aws_s3:
    bucket: "{{ ec2_name_prefix|lower }}.private"
    mode: get
    object: "{{ ec2_name_prefix }}-private.pem"
    dest: "{{ playbook_dir }}/{{ ec2_name_prefix }}/{{ ec2_name_prefix }}-private.pem"
    encrypt: true
    region: "{{ ec2_region }}"
  when: not create_key.changed

- name: Create instances for F5 BIG-IP node(s)
  amazon.aws.ec2_instance:
    name: "{{ ec2_name_prefix }}-F5-BIGIP"
    key_name: "{{ ec2_name_prefix }}-key"
    security_group: "sg-0d27027979ce31da6"
    instance_type: "{{ ec2_info.f5node.size }}"
    image_id: "{{ f5_ami.image_id }}"
    region: "{{ ec2_region }}"
    exact_count: 1
    state: running
    network:
      assign_public_ip: true
    filters:
      instance-state-name: running
      "tag:Workshop_f5": "{{ ec2_name_prefix }}-f5"
    tags:
      short_name: "f5"
    wait: "{{ ec2_wait }}"
    # vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
      - device_name: /dev/xvda
        ebs:
          volume_type: "{{ ec2_info['f5node'].disk_volume_type }}"
          volume_size: "{{ ec2_info['f5node'].disk_space }}"
          iops: "{{ ec2_info['f5node'].disk_iops }}"
          throughput: "{{ ec2_info['f5node'].disk_throughput }}"
          delete_on_termination: true
  register: f5_test

- debug:
    msg: "{{ f5_test }}"

- name: grab instance ids to tag f5 node
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_f5": "{{ ec2_name_prefix }}-f5"
  register: f5_output